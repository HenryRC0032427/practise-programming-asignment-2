<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAO0AAADVCAMAAACMuod9AAAABGdBTUEAALGPC/xhBQAAAFRQTFRF////
        AAAA6urqe3t7d3d3+/v7W1tbV1dXMzMzLCws/Pz8+Pj4mZmZsLCwqKiorKyskZGRjo6OFBQUCAgIgoKC
        8vLyvLy8JycnU1NTFxcXaGhoT09PJhiMfgAABA1JREFUeF7t3dly4jAQhWE8hAkECIlxmEzy/u85biGG
        JV6k02pJF+e/snLh0ldeUlBU9YIxxhhjjDHGGGND/aosvy2TXnZNZW39ztLnrO3yqYq65dFS66z749ov
        S3faNM3u00jrrK+LRbPxfyjbvm2a9+3it4n2Yq1E660LE+3VWoX2v9VCe2utQHtjTa+9txbX3llTa531
        4Beuotp9/0/nxppW+9NaVCvWt3tdOu2QtaB23+/mbeUXl1Jph63FtIPWVNoxayHtiDWNdjVqLaIdtabQ
        TlkLaN27adiq167epqzZtZNWrXbOmlk7Y9VpxXqctGbVHsaf10u4NsSaUXuYu64Sqp2/h89l0gZZUa27
        rnu/mCyLNuAePodow61ZtMFWRBtjzaAV6y7MGq91z2uw1VwbZY3VxlqNtc764hchxWjjrabaaGuMFrEa
        agFruHYb9W66ZqSFrKHa7TtmNdKC1jCtWFvIaqJ9Ra0hWo3VQKuwzmt11uRalXVOq7Um1iqt01q9NalW
        bZ3SinVz8gu4ZNoE1nHty1d/9rbrlrq6/hz+UFf/+VVtHdeuemxVJbBOab8//M9QNH00mySn2TR+X7rG
        tc/+SFei53ZNbXzUStQiUQtELRC1ErVI1AJRC0StRC0StUDUAlErUYtELRC1QNRK1CJRC0QtELUStUjU
        AlELRK1ELRK1QNQCUStRi0QtELVA1ErUIlELRC0QtRK1SNQCUQtErUQtErVA1AJRK1GLRC0QtUDUStQi
        UQtELRC1ErVI1AJRC0StRC0StUDUAlErUYtELRC1QNRK1CJRC0QtELUStUjUAlELRK1ELRK1QNQCUStR
        i0QtELVA1ErJtH+2fuaApu26STL24NNU62YeV5WdVqzHpxQt/zZLf4jWyaiS5mt4dp9e667rzZx9Vfrn
        9rR5mD1/m1ab1KrX7tsJq1ab2KrVzlh12uRWnXbWqtEaWDXaACuuNbHi2iArqnXWgPnO0WFamVEeYMW0
        ZlZM6+axh1gRraEV0e773QTOd47XmlrjtVHWWK2xNVYbaY3Trqytcdpoa4w2gzVG695NcdZwrZvvbG0N
        10LWUG0ma6gWtIZpxXrMYQ3TynxnyBqizWgN0R7Q6yrNabPdw+fmtCrrnNZdV+Uc4KimtYp7+NyUNrt1
        Wqu2TmkLWKe0bva8zjqudc9rbuu4Nol1TFvIOqZ11hQzj4e0xazD2mTWIW1B65A2ofWndlvi3XTtUZvU
        +qiV2fMFrY/axNZ7rVjbktZ7bZI5+/ddtRVYb7UG1qu2CutVa2K9aCuxXrRG1rO2GutZa2YV7feuaTYn
        vyzdupHv1oysou1ru25ZRV1rafXamjK09vmfoVST3xZjjDHGGGOMMcZuWiz+AWH6RLLE7wcqAAAAAElF
        TkSuQmCC
</value>
  </data>
</root>